classes:
  - system.salt.minion.cert.mysql.server
  - system.salt.minion.cert.rabbitmq_server
  - system.linux.system.lowmem
  - system.linux.system.repo.mcp.openstack
  - system.linux.system.repo.mcp.extra
  - system.linux.storage.loopback
  - service.rabbitmq.server.ssl
  - system.rabbitmq.server.vhost.openstack
  - system.keystone.server.wsgi
  - system.keystone.server.single
  - service.galera.ssl
  - service.galera.master.cluster
  - system.galera.server.database.cinder
  - system.galera.server.database.designate
  - system.galera.server.database.glance
  - system.galera.server.database.heat
  - system.galera.server.database.keystone
  - system.galera.server.database.nova
  - system.keystone.client.single
  - system.keystone.client.service.cinder3
  - system.keystone.client.service.nova21
  - system.keystone.client.service.nova-placement
  - system.keystone.client.service.designate
  - system.glance.control.single
  - system.nova.control.single
  - system.neutron.control.openvswitch.single
  - system.neutron.client.service.public
  - system.heat.server.single
  - system.nova.compute.single
  - service.neutron.gateway.single
  - system.cinder.control.single
  - system.cinder.control.backend.lvm
  - service.cinder.volume.single
  - system.cinder.volume.backend.lvm
  - system.horizon.server.single
  - system.bind.server.single
  - system.designate.server.single
  - system.designate.server.backend.bind
  - service.runtest.tempest

  # not openstack related
  - system.linux.network.dynamic_hosts
  - service.git.client
  - system.linux.system.single.debian
  - system.linux.system.repo.mcp.salt
  - system.openssh.client.lab
  - system.salt.minion.ca.salt_master
  - system.salt.minion.cert.proxy
  - system.reclass.storage.salt
  - system.mysql.client
  - system.memcached.server.single
  - system.rabbitmq.server.single
  - system.auditd.server.ciscat
  - cluster.overrides
  - cluster.{{ cookiecutter.cluster_name }}.infra

parameters:
  _param:
    reclass_data_repository: https://gerrit.mcp.mirantis.net/salt-models/mcp-virtual-aio
    reclass_data_revision: master
    reclass_config_master: {{ cookiecutter.reclass_config_master }}
    single_address: {{ cookiecutter.infra_config_address }}
    infra_config_address: ${_param:single_address}
    cluster_domain: virtual-mcp11-aio.local
    cluster_name: {{ cookiecutter.cluster_name }}
    infra_config_hostname: cfg01

    mysql_admin_user: root
    mysql_cluster_role: master
    loopback_device_size: 20
    salt_minion_ca_host: ${linux:network:fqdn}
    openstack_version: {{ cookiecutter.openstack_version }}
    openstack_node_role: primary
    cluster_public_host: ${_param:single_address}
    cluster_public_protocol: http
    openstack_region: CustomRegion
    admin_email: root@localhost
    galera_server_cluster_name: openstack_cluster
    keystone_public_path: "/"
    keystone_internal_path: "/"
    keystone_admin_path: "/"
    keystone_version: ${_param:openstack_version}
    glance_version: ${_param:openstack_version}
    nova_version: ${_param:openstack_version}
    neutron_version: ${_param:openstack_version}
    cinder_version: ${_param:openstack_version}
    heat_version: ${_param:openstack_version}
    horizon_version: ${_param:openstack_version}
    designate_version: ${_param:openstack_version}
    keystone_service_token: workshop
    keystone_service_host: ${_param:single_address}
    heat_service_host: ${_param:single_address}
    neutron_service_host: ${_param:single_address}
    glance_service_host: ${_param:single_address}
    cinder_service_host: ${_param:single_address}
    designate_service_host: ${_param:single_address}
    nova_service_host: ${_param:single_address}
    control_address: ${_param:single_address}
    cluster_vip_address: ${_param:single_address}
    cluster_local_address: ${_param:single_address}
    openstack_database_address: ${_param:single_address}
    tenant_address: ${_param:single_address}
    horizon_identity_encryption: none
    horizon_identity_version: 2
    horizon_identity_host: ${_param:single_address}
    designate_admin_api_enabled: true
    designate_bind9_rndc_key: 4pc+X4PDqb2q+5o72dISm72LM1Ds9X2EYZjqg+nmsS7FhdTwzFFY8l/iEDmHxnyjkA33EQC8H+z0fLLBunoitw==
    designate_pool_target_type: bind9
    designate_domain_id: 5186883b-91fb-4891-bd49-e6769234a8fc
    designate_pool_ns_records:
      - hostname: "ns1.example.org."
        priority: 10
    designate_pool_nameservers:
      - host: ${_param:single_address}
        port: 53
    designate_pool_target_masters:
      - host: ${_param:single_address}
        port: 5354
    designate_pool_target_options:
      host: ${_param:single_address}
      port: 53
      rndc_host: 127.0.0.1
      rndc_port: 953
      rndc_key_file: /etc/designate/rndc.key
    designate_quota_zones: 40
    designate_worker_enabled: true
    linux_system_repo: deb [arch=amd64] http://mirror.fuel-infra.org/mcp-repos/${_param:openstack_version}/xenial ${_param:openstack_version} main
    linux_system_repo_pin: release a=${_param:openstack_version}
    linux_system_repo_priority: 1200
    openstack_public_neutron_subnet_gateway: {{ cookiecutter.neutron_public_subnet_gateway }}
    openstack_public_neutron_subnet_cidr: {{ cookiecutter.neutron_public_subnet_cidr }}
    openstack_public_neutron_subnet_allocation_start: {{ cookiecutter.neutron_public_subnet_start }}
    openstack_public_neutron_subnet_allocation_end: {{ cookiecutter.neutron_public_subnet_end }}
    galera_ssl_enabled: true
    rabbitmq_ssl_enabled: false # untill rabbitmq formula with https://gerrit.mcp.mirantis.net/#/c/15198/ promoted to stable
    rabbitmq_port: 5672 # for non-ssl use 5672/for ssl 5671
    runtest_tempest_cfg_dir: /root/rally_reports/
    runtest_tempest_cfg_name: tempest_generated.conf
    runtest_tempest_log_file: /home/rally/rally_reports/tempest.log
    runtest_tempest_public_net: public
    artifactory_user: artifactory_user
    openstack_log_appender: true
    openstack_fluentd_handler_enabled: true
    openstack_ossyslog_handler_enabled: true
  galera:
    master:
      members:
        - host: ${_param:single_address}
          port: 4567
      #      members: ~
      innodb_buffer_pool_size: 1024M
      max_connections: 1000
    slave:
      enabled: false
  rabbitmq:
    server:
      ssl:
        enabled: ${_param:rabbitmq_ssl_enabled}
  neutron:
    server:
      # Temporary install neutron-plugin-ml2 untill https://gerrit.mcp.mirantis.net/#/c/16262/ promoted
      # to stable
      pkgs:
        - neutron-server
        - python-neutron-lbaas
        - gettext-base
        - python-pycadf
        - neutron-plugin-ml2
      api_workers: 2
      rpc_state_report_workers: 2
      rpc_workers: 2
      message_queue:
        members:
          - host: ${_param:single_address}
        #      message_queue:
        #        members: ~
        #        port: ${_param:rabbitmq_port}
        ssl:
          enabled: ${_param:rabbitmq_ssl_enabled}
      database:
        ssl:
          enabled: ${_param:galera_ssl_enabled}
    gateway:
      metadata:
        workers: 2
      agent_mode: dvr_snat
      dvr: True
      message_queue:
        port: ${_param:rabbitmq_port}
        ssl:
          enabled: ${_param:rabbitmq_ssl_enabled}
  nova:
    compute:
      vncproxy_url: http://${_param:single_address}:6080
      network:
        user: neutron
        password: ${_param:keystone_neutron_password}
        tenant: service
      cache:
        members:
          - host: ${_param:single_address}
            port: 11211
      #      cache:
      #        members: ~
      message_queue:
        port: ${_param:rabbitmq_port}
        ssl:
          enabled: ${_param:rabbitmq_ssl_enabled}
      # Since in AIO by default option config_drive is false,
      # due to nova controller and compute states rewrite
      # configs each, we must set config_drive option
      # explicitly for runtest formula to discover the correct settings
      config_drive:
        forced: false
    controller:
      vncproxy_url: http://${_param:single_address}:6080
      database:
        ssl:
          enabled: ${_param:galera_ssl_enabled}
      message_queue:
        port: ${_param:rabbitmq_port}
        ssl:
          enabled: ${_param:rabbitmq_ssl_enabled}
  cinder:
    controller:
      database:
        ssl:
          enabled: ${_param:galera_ssl_enabled}
      message_queue:
        port: ${_param:rabbitmq_port}
        ssl:
          enabled: ${_param:rabbitmq_ssl_enabled}
    volume:
      cache:
        members:
          - host: ${_param:single_address}
            port: 11211
      #      cache:
      #        members: ~
      database:
        ssl:
          enabled: ${_param:galera_ssl_enabled}
      message_queue:
        port: ${_param:rabbitmq_port}
        ssl:
          enabled: ${_param:rabbitmq_ssl_enabled}
  horizon:
    server:
      secure: False
      identity:
        encryption: ${_param:horizon_identity_encryption}
      api_versions:
        identity: 3
  designate:
    server:
      quota:
        zones: ${_param:designate_quota_zones}
      database:
        ssl:
          enabled: ${_param:galera_ssl_enabled}
      message_queue:
        port: ${_param:rabbitmq_port}
        ssl:
          enabled: ${_param:rabbitmq_ssl_enabled}
    worker:
      enabled: ${_param:designate_worker_enabled}
  glance:
    client:
      enabled: True
    server:
      database:
        ssl:
          enabled: ${_param:galera_ssl_enabled}
      message_queue:
        port: ${_param:rabbitmq_port}
        ssl:
          enabled: ${_param:rabbitmq_ssl_enabled}
  keystone:
    server:
      database:
        ssl:
          enabled: ${_param:galera_ssl_enabled}
      message_queue:
        port: ${_param:rabbitmq_port}
        ssl:
          enabled: ${_param:rabbitmq_ssl_enabled}
    client:
      enabled: true
      server:
        identity:
          admin:
            api_version: 3
  heat:
    server:
      database:
        ssl:
          enabled: ${_param:galera_ssl_enabled}
      message_queue:
        port: ${_param:rabbitmq_port}
        ssl:
          enabled: ${_param:rabbitmq_ssl_enabled}
  runtest:
    enabled: True
    salttest:
      enabled: True
    tempest:
      enabled: True
      cfg_dir: ${_param:runtest_tempest_cfg_dir}
      cfg_name: ${_param:runtest_tempest_cfg_name}
      convert_to_uuid:
        network:
          public_network_id: ${_param:runtest_tempest_public_net}
      compute:
        build_timeout: 600
        min_microversion: 2.1
        max_microversion: 2.53
      orchestration:
        max_template_size: 5440000
        max_resources_per_stack: 20000
      dns_feature_enabled:
        # Switch this to designate_admin_api_enabled once [1] is promoted to stable packages
        # [1] https://gerrit.mcp.mirantis.net/gitweb?p=salt-formulas/designate.git;a=commit;h=96a3f43f6cf1149559e54a00b5548bdf46333749
        api_admin: false
        api_v1: false
        api_v2: true
        api_v2_quotas: true
        api_v2_root_recordsets: true
        bug_1573141_fixed: true
      volume-feature-enabled:
        backup: false
      network:
        floating_network_name: ${_param:runtest_tempest_public_net}
    artifact_collector:
      enabled: true
      artifactory:
        enabled: true
        user: ${_param:artifactory_user}
        password: ${_param:artifactory_password}
        host: artifactory.mcp.mirantis.net
        port: 443
        proto: https
        endpoint: /oscore-local/${_param:cluster_domain}/${_param:infra_config_hostname}
      artifacts:
        sys_logs:
          path: /var/log
        etc:
          path: /etc
      cmds:
        service_status:
          cmd: "(. /root/keystonercv3; openstack compute service list; openstack volume service list; openstack catalog list)"
          dst: /tmp/openstack_service_report.txt
  openssh:
    server:
      password_auth: true
      permit_root_login: true
  linux:
    system:
      user:
        root:
          enabled: true
          # r00tme
          password: $6$9ojWyyN.$26Vj46JtCUL6C7XBQ8RmQTZLwo8/8SkqTRElXh0X2YBLrt7E/aVe2AYQ5gguYUwUknZNOSn5q7M9M3Jyf2gof/
      repo:
        linux_system_repo:
          source: ${_param:linux_system_repo}
          architectures: amd64
          clean_file: true
          pin:
            - pin: ${_param:linux_system_repo_pin}
              priority: ${_param:linux_system_repo_priority}
              package: "*"
    network:
      bridge: openvswitch
      interface:
        br-floating:
          enabled: true
          type: ovs_bridge
        phy-public:
          enabled: true
          type: ovs_port
          bridge: br-floating
          proto: static
          address: ${_param:openstack_public_neutron_subnet_gateway}
          netmask: 255.255.255.0
        ens4:
          enabled: true
          type: eth
          proto: static
          address: ${_param:single_address}
          netmask: 255.255.255.0
        ens3:
          enabled: true
          type: eth
          proto: dhcp
